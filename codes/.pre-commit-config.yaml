# Pre-commit configuration for Cataract-LMM
# Ensures code quality and consistency across all commits
# 
# Setup:
#   pip install pre-commit
#   pre-commit install
#
# Manual run:
#   pre-commit run --all-files

repos:
  # ============================================================================
  # General Code Quality
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ".*\\.md$"
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: detect-private-key
      - id: check-ast
      - id: debug-statements
      - id: check-docstring-first
      - id: requirements-txt-fixer

  # ============================================================================
  # Python Code Formatting
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  # ============================================================================
  # Import Sorting
  # ============================================================================
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  # ============================================================================
  # Linting
  # ============================================================================
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # ============================================================================
  # Type Checking
  # ============================================================================
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: 
          - types-PyYAML
          - types-requests
          - types-setuptools
        args: ['--ignore-missing-imports', '--strict']
        exclude: '^(tests/|.*_test\.py|test_.*\.py)'

  # ============================================================================
  # Security Scanning
  # ============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: '^tests/'

  # ============================================================================
  # Documentation
  # ============================================================================
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: '^(tests/|.*_test\.py|test_.*\.py|setup\.py)'

  # ============================================================================
  # Jupyter Notebooks
  # ============================================================================
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        args: ['--line-length=88']
      - id: nbqa-isort
        args: ['--profile=black']
      - id: nbqa-flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503,E402']

  # ============================================================================
  # YAML/JSON Validation
  # ============================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # ============================================================================
  # Dockerfile Linting
  # ============================================================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # ============================================================================
  # Remove unused imports
  # ============================================================================
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args: 
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --expand-star-imports
          - --ignore-init-module-imports

  # ============================================================================
  # Git commit message validation
  # ============================================================================
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# ============================================================================
# Global Configuration
# ============================================================================
default_language_version:
  python: python3.8

exclude: |
  (?x)^(
      .*\.egg-info/.*|
      .*/__pycache__/.*|
      .*/\.mypy_cache/.*|
      build/.*|
      dist/.*|
      .*\.pyc|
      .*\.pyo|
      legacy_scripts/.*|
      reference_scripts/.*|
      .*\.pt|
      .*\.pth|
      .*\.onnx|
      .*\.mp4|
      .*\.avi|
      .*\.mov|
      .*\.jpg|
      .*\.jpeg|
      .*\.png|
      .*\.gif
  )$

# CI skip patterns
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, bandit]  # Skip these in CI due to complexity
  submodules: false
